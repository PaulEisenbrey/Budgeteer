namespace Database.Trupanion.Entity.TestData.PolicyTesting;

public class TestDataPolicyTestingAutomatedScenarioResult
{
    public int Id { get; set; }
    public int? ResultId { get; set; }
    public DateTime RunDate { get; set; }
    public int? EngineVersion { get; set; }
    public bool? TestPassed { get; set; }
    public int BreedId { get; set; }
    public int SpeciesVal { get; set; }
    public bool IsSpayed { get; set; }
    public bool IsBreedingFemale { get; set; }
    public int StateId { get; set; }
    public string? ZipCode { get; set; }
    public bool HasRiderA { get; set; }
    public bool HasRiderB { get; set; }
    public int AgeId { get; set; }
    public int Gender { get; set; }
    public bool IsWorkingPet { get; set; }
    public decimal Deductible { get; set; }
    public decimal? RateCardPremium { get; set; }
    public decimal? SprocPremium { get; set; }
    public DateTime? EffectiveDate { get; set; }
    public string? ResultMessage { get; set; }
    public string? TestFactorSource { get; set; }
    public double? TestBaseRate { get; set; }
    public double? TestTrendFactor { get; set; }
    public double? TestGeoFactor { get; set; }
    public double? TestHospitalFactor { get; set; }
    public double? TestAgeFactor { get; set; }
    public double? TestBreedFactor { get; set; }
    public double? TestGenderFactor { get; set; }
    public double? TestSpayFactor { get; set; }
    public double? TestWorkingPetFactor { get; set; }
    public double? TestTherapeuticFoodFactor { get; set; }
    public double? TestScienceDietFoodFactor { get; set; }
    public double? TestExamFeeFactor { get; set; }
    public double? TestCoinsuranceFactor { get; set; }
    public double? TestRecoveryFactor { get; set; }
    public double? TestRiderBfactor { get; set; }
    public double? TestExpenseRate { get; set; }
    public double? TestWebLinkPartnerFactor { get; set; }
    public double? TestAffinityGroupFactor { get; set; }
    public double? TestEmployeeBenefitFactor { get; set; }
    public double? TestLimitedCoverageFactor { get; set; }
    public double? TestDeductibleFactor { get; set; }
    public string? ProdFactorSource { get; set; }
    public double? ProdBaseRate { get; set; }
    public double? ProdTrendFactor { get; set; }
    public double? ProdGeoFactor { get; set; }
    public double? ProdHospitalFactor { get; set; }
    public double? ProdAgeFactor { get; set; }
    public double? ProdBreedFactor { get; set; }
    public double? ProdGenderFactor { get; set; }
    public double? ProdSpayFactor { get; set; }
    public double? ProdWorkingPetFactor { get; set; }
    public double? ProdTherapeuticFoodFactor { get; set; }
    public double? ProdScienceDietFoodFactor { get; set; }
    public double? ProdExamFeeFactor { get; set; }
    public double? ProdCoinsuranceFactor { get; set; }
    public double? ProdRecoveryFactor { get; set; }
    public double? ProdRiderBfactor { get; set; }
    public double? ProdExpenseRate { get; set; }
    public double? ProdWebLinkPartnerFactor { get; set; }
    public double? ProdAffinityGroupFactor { get; set; }
    public double? ProdEmployeeBenefitFactor { get; set; }
    public double? ProdLimitedCoverageFactor { get; set; }
    public double? ProdDeductibleFactor { get; set; }
}
